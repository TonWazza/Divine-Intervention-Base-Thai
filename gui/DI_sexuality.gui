

# Sexuality Window


window = {
	name = "DI_sexuality_window"
	parentanchor = top|right
	position = { -50 100 }
	size = { 150 100 }
	layer = windows_layer
	filter_mouse = all
	allow_outside = yes
	alwaystransparent = no
	
	using = Window_Background
	using = Window_Decoration
	movable = yes
	visible = "[GetVariableSystem.Exists('DI_sexuality_window_visible')]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		on_finish = "[PdxGuiWidget.StackTop]"
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}
	
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes
		
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = DI_sexuality
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_sexuality_window_visible')]"
			}
		}
		
		flowcontainer = {				
			direction = vertical

			widget = {
				name = "DI_heterosexual"
				size = { 170 60 }

				background = {
					using = Background_Area
				}

				vbox = {
					button_standard_hover = {
						name = "DI_heterosexual_button"
						onclick = "[GetScriptedGui('DI_sexuality_heterosexual').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						size = { 160 60}

						icon = {
							visible = "[GetPlayer.IsFemale]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "1"
							texture = "gfx/interface/icons/character_status/sexuality_icons_female.dds"
						}
						
						icon = {
							visible = "[Not(GetPlayer.IsFemale)]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "1"
							texture = "gfx/interface/icons/character_status/sexuality_icons_male.dds"
						}
					}
				}

				vbox = {
					text_single = {
						name = "sexuality_name"
						alwaystransparent = yes
						size = { 160 60 }
						align = hcenter|top
						layoutpolicy_horizontal = expanding
						text = DI_sexuality_he
						autoresize = no
					}
				}
			}

			widget = {
				name = "DI_homosexual"
				size = { 170 60 }

				background = {
					using = Background_Area
				}

				vbox = {
					button_standard_hover = {
						name = "DI_homosexual_button"
						onclick = "[GetScriptedGui('DI_sexuality_homosexual').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						size = { 160 60}

						icon = {
							visible = "[GetPlayer.IsFemale]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "2"
							texture = "gfx/interface/icons/character_status/sexuality_icons_female.dds"
						}
						
						icon = {
							visible = "[Not(GetPlayer.IsFemale)]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "2"
							texture = "gfx/interface/icons/character_status/sexuality_icons_male.dds"
						}
					}
				}

				vbox = {
					text_single = {
						name = "sexuality_name"
						alwaystransparent = yes
						size = { 160 60 }
						align = hcenter|top
						layoutpolicy_horizontal = expanding
						text = DI_sexuality_ho
						autoresize = no
					}
				}
			}
			
			widget = {
				name = "DI_bisexual"
				size = { 170 60 }

				background = {
					using = Background_Area
				}

				vbox = {
					button_standard_hover = {
						name = "DI_bisexual_button"
						onclick = "[GetScriptedGui('DI_sexuality_bisexual').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						size = { 160 60}

						icon = {
							visible = "[GetPlayer.IsFemale]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "3"
							texture = "gfx/interface/icons/character_status/sexuality_icons_female.dds"
						}
						
						icon = {
							visible = "[Not(GetPlayer.IsFemale)]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "3"
							texture = "gfx/interface/icons/character_status/sexuality_icons_male.dds"
						}
					}
				}

				vbox = {
					text_single = {
						name = "sexuality_name"
						alwaystransparent = yes
						size = { 160 60 }
						align = hcenter|top
						layoutpolicy_horizontal = expanding
						text = DI_sexuality_bi
						autoresize = no
					}
				}
			}
			
			widget = {
				name = "DI_asexual"
				size = { 170 60 }

				background = {
					using = Background_Area
				}

				vbox = {
					button_standard_hover = {
						name = "DI_asexual_button"
						onclick = "[GetScriptedGui('DI_sexuality_asexual').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						size = { 160 60}

						icon = {
							visible = "[GetPlayer.IsFemale]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "4"
							texture = "gfx/interface/icons/character_status/sexuality_icons_female.dds"
						}
						
						icon = {
							visible = "[Not(GetPlayer.IsFemale)]"
							parentanchor = hcenter|bottom
							position = { 0 0 }
							size = { 35 35 }
							framesize = { 40 40 }
							frame = "4"
							texture = "gfx/interface/icons/character_status/sexuality_icons_male.dds"
						}
					}
				}

				vbox = {
					text_single = {
						name = "sexuality_name"
						alwaystransparent = yes
						size = { 160 60 }
						align = hcenter|top
						layoutpolicy_horizontal = expanding
						text = DI_sexuality_as
						autoresize = no
					}
				}
			}
		}
	}
}